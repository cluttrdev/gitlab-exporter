stages:
  - lint
  - build
  - test

default:
  image: golang:1.20
  tags: [ $GITLAB_CI_DEFAULT_TAGS ]

variables:
  GOPATH: ${CI_PROJECT_DIR}/.go
  GOCACHE: ${CI_PROJECT_DIR}/.cache/go-build

download:
  stage: .pre
  script:
    - go mod download
  cache: &cache-defaults
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - ${GOPATH}
    policy: pull-push

lint:
  stage: lint
  image: docker.io/golangci/golangci-lint:latest
  cache:
    - <<: *cache-defaults
      policy: pull
  variables:
    GOLANGCI_LINT_CACHE: ${CI_PROJECT_DIR}/.cache/golangci-lint
  script:
    - golangci-lint run ./...
  allow_failure: true

build:
  stage: build
  cache:
    - <<: *cache-defaults
      policy: pull
  script:
    - go build .

test:
  stage: test
  cache:
    - <<: *cache-defaults
      policy: pull
  before_script:
    - go install gotest.tools/gotestsum@latest
  script:
    - ${GOPATH}/bin/gotestsum --junitfile report.xml --format testname ./test/...
  artifacts:
    when: always
    reports:
      junit: report.xml
