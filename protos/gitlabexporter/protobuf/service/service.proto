syntax = "proto3";

option go_package = "go.cluttr.dev/gitlab-exporter/protobuf/servicepb";

package gitlabexporter.protobuf.service;

import "gitlabexporter/protobuf/commit.proto";
import "gitlabexporter/protobuf/coverage.proto";
import "gitlabexporter/protobuf/deployment.proto";
import "gitlabexporter/protobuf/issue.proto";
import "gitlabexporter/protobuf/job.proto";
import "gitlabexporter/protobuf/merge_request.proto";
import "gitlabexporter/protobuf/metric.proto";
import "gitlabexporter/protobuf/pipeline.proto";
import "gitlabexporter/protobuf/project.proto";
import "gitlabexporter/protobuf/section.proto";
import "gitlabexporter/protobuf/test_report.proto";
import "gitlabexporter/protobuf/trace.proto";

service GitLabExporter {
    rpc RecordCommits(RecordCommitsRequest) returns (RecordSummary) {}
    rpc RecordCoverageReports(RecordCoverageReportsRequest) returns (RecordSummary) {}
    rpc RecordCoveragePackages(RecordCoveragePackagesRequest) returns (RecordSummary) {}
    rpc RecordCoverageClasses(RecordCoverageClassesRequest) returns (RecordSummary) {}
    rpc RecordCoverageMethods(RecordCoverageMethodsRequest) returns (RecordSummary) {}
    rpc RecordDeployments(RecordDeploymentsRequest) returns (RecordSummary) {}
    rpc RecordIssues(RecordIssuesRequest) returns (RecordSummary) {}
    rpc RecordJobs(RecordJobsRequest) returns (RecordSummary) {}
    rpc RecordMergeRequests(RecordMergeRequestsRequest) returns (RecordSummary) {}
    rpc RecordMergeRequestNoteEvents(RecordMergeRequestNoteEventsRequest) returns (RecordSummary) {}
    rpc RecordMetrics(RecordMetricsRequest) returns (RecordSummary) {}
    rpc RecordPipelines(RecordPipelinesRequest) returns (RecordSummary) {}
    rpc RecordProjects(RecordProjectsRequest) returns (RecordSummary) {}
    rpc RecordSections(RecordSectionsRequest) returns (RecordSummary) {}
    rpc RecordTestCases(RecordTestCasesRequest) returns (RecordSummary) {}
    rpc RecordTestReports(RecordTestReportsRequest) returns (RecordSummary) {}
    rpc RecordTestSuites(RecordTestSuitesRequest) returns (RecordSummary) {}
    rpc RecordTraces(RecordTracesRequest) returns (RecordSummary) {}
}

message RecordSummary {
    int32 recorded_count = 1;
}

message RecordCommitsRequest {
    repeated gitlabexporter.protobuf.Commit data = 1;
}

message RecordCoverageReportsRequest {
    repeated gitlabexporter.protobuf.CoverageReport data = 1;
}

message RecordCoveragePackagesRequest {
    repeated gitlabexporter.protobuf.CoveragePackage data = 1;
}

message RecordCoverageClassesRequest {
    repeated gitlabexporter.protobuf.CoverageClass data = 1;
}

message RecordCoverageMethodsRequest {
    repeated gitlabexporter.protobuf.CoverageMethod data = 1;
}

message RecordDeploymentsRequest {
    repeated gitlabexporter.protobuf.Deployment data = 1;
}

message RecordIssuesRequest {
    repeated gitlabexporter.protobuf.Issue data = 1;
}

message RecordJobsRequest {
    repeated gitlabexporter.protobuf.Job data = 1;
}

message RecordMergeRequestsRequest {
    repeated gitlabexporter.protobuf.MergeRequest data = 1;
}

message RecordMergeRequestNoteEventsRequest {
    repeated gitlabexporter.protobuf.MergeRequestNoteEvent data = 1;
}

message RecordMetricsRequest {
    repeated gitlabexporter.protobuf.Metric data = 1;
}

message RecordPipelinesRequest {
    repeated gitlabexporter.protobuf.Pipeline data = 1;
}

message RecordProjectsRequest {
    repeated gitlabexporter.protobuf.Project data = 1;
}

message RecordSectionsRequest {
    repeated gitlabexporter.protobuf.Section data = 1;
}

message RecordTestCasesRequest {
    repeated gitlabexporter.protobuf.TestCase data = 1;
}

message RecordTestReportsRequest {
    repeated gitlabexporter.protobuf.TestReport data = 1;
}

message RecordTestSuitesRequest {
    repeated gitlabexporter.protobuf.TestSuite data = 1;
}

message RecordTracesRequest {
    repeated gitlabexporter.protobuf.Trace data = 1;
}
