// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: gitlabexporter/protobuf/pipeline.proto

package typespb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Pipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Iid              int64                  `protobuf:"varint,2,opt,name=iid,proto3" json:"iid,omitempty"`
	Project          *ProjectReference      `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	Name             string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Ref              string                 `protobuf:"bytes,5,opt,name=ref,proto3" json:"ref,omitempty"`
	RefPath          string                 `protobuf:"bytes,6,opt,name=ref_path,json=refPath,proto3" json:"ref_path,omitempty"`
	Sha              string                 `protobuf:"bytes,7,opt,name=sha,proto3" json:"sha,omitempty"`
	Source           string                 `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`
	Status           string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	FailureReason    string                 `protobuf:"bytes,10,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	Timestamps       *PipelineTimestamps    `protobuf:"bytes,11,opt,name=timestamps,proto3" json:"timestamps,omitempty"`
	QueuedDuration   *durationpb.Duration   `protobuf:"bytes,12,opt,name=queued_duration,json=queuedDuration,proto3" json:"queued_duration,omitempty"`
	Duration         *durationpb.Duration   `protobuf:"bytes,13,opt,name=duration,proto3" json:"duration,omitempty"`
	Coverage         float64                `protobuf:"fixed64,14,opt,name=coverage,proto3" json:"coverage,omitempty"`
	Warnings         bool                   `protobuf:"varint,15,opt,name=warnings,proto3" json:"warnings,omitempty"`
	YamlErrors       bool                   `protobuf:"varint,16,opt,name=yaml_errors,json=yamlErrors,proto3" json:"yaml_errors,omitempty"`
	Child            bool                   `protobuf:"varint,17,opt,name=child,proto3" json:"child,omitempty"`
	UpstreamPipeline *PipelineReference     `protobuf:"bytes,18,opt,name=upstream_pipeline,json=upstreamPipeline,proto3,oneof" json:"upstream_pipeline,omitempty"`
	MergeRequest     *MergeRequestReference `protobuf:"bytes,19,opt,name=merge_request,json=mergeRequest,proto3,oneof" json:"merge_request,omitempty"`
	User             *UserReference         `protobuf:"bytes,20,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *Pipeline) Reset() {
	*x = Pipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlabexporter_protobuf_pipeline_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline) ProtoMessage() {}

func (x *Pipeline) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_pipeline_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline.ProtoReflect.Descriptor instead.
func (*Pipeline) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_pipeline_proto_rawDescGZIP(), []int{0}
}

func (x *Pipeline) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Pipeline) GetIid() int64 {
	if x != nil {
		return x.Iid
	}
	return 0
}

func (x *Pipeline) GetProject() *ProjectReference {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *Pipeline) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pipeline) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *Pipeline) GetRefPath() string {
	if x != nil {
		return x.RefPath
	}
	return ""
}

func (x *Pipeline) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *Pipeline) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Pipeline) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Pipeline) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

func (x *Pipeline) GetTimestamps() *PipelineTimestamps {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

func (x *Pipeline) GetQueuedDuration() *durationpb.Duration {
	if x != nil {
		return x.QueuedDuration
	}
	return nil
}

func (x *Pipeline) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *Pipeline) GetCoverage() float64 {
	if x != nil {
		return x.Coverage
	}
	return 0
}

func (x *Pipeline) GetWarnings() bool {
	if x != nil {
		return x.Warnings
	}
	return false
}

func (x *Pipeline) GetYamlErrors() bool {
	if x != nil {
		return x.YamlErrors
	}
	return false
}

func (x *Pipeline) GetChild() bool {
	if x != nil {
		return x.Child
	}
	return false
}

func (x *Pipeline) GetUpstreamPipeline() *PipelineReference {
	if x != nil {
		return x.UpstreamPipeline
	}
	return nil
}

func (x *Pipeline) GetMergeRequest() *MergeRequestReference {
	if x != nil {
		return x.MergeRequest
	}
	return nil
}

func (x *Pipeline) GetUser() *UserReference {
	if x != nil {
		return x.User
	}
	return nil
}

type PipelineTimestamps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommittedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=committed_at,json=committedAt,proto3" json:"committed_at,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	StartedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	FinishedAt  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
}

func (x *PipelineTimestamps) Reset() {
	*x = PipelineTimestamps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlabexporter_protobuf_pipeline_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineTimestamps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineTimestamps) ProtoMessage() {}

func (x *PipelineTimestamps) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_pipeline_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineTimestamps.ProtoReflect.Descriptor instead.
func (*PipelineTimestamps) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_pipeline_proto_rawDescGZIP(), []int{1}
}

func (x *PipelineTimestamps) GetCommittedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CommittedAt
	}
	return nil
}

func (x *PipelineTimestamps) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PipelineTimestamps) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PipelineTimestamps) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *PipelineTimestamps) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

var File_gitlabexporter_protobuf_pipeline_proto protoreflect.FileDescriptor

var file_gitlabexporter_protobuf_pipeline_proto_rawDesc = []byte{
	0x0a, 0x26, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x28, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xee, 0x06, 0x0a,
	0x08, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x68, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x52, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x42, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x79, 0x61,
	0x6d, 0x6c, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x79, 0x61, 0x6d, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x12, 0x5c, 0x0a, 0x11, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x10, 0x75, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x58, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x01, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc1, 0x02,
	0x0a, 0x12, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41,
	0x74, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x6f, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x74, 0x72, 0x2e, 0x64,
	0x65, 0x76, 0x2f, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2d, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gitlabexporter_protobuf_pipeline_proto_rawDescOnce sync.Once
	file_gitlabexporter_protobuf_pipeline_proto_rawDescData = file_gitlabexporter_protobuf_pipeline_proto_rawDesc
)

func file_gitlabexporter_protobuf_pipeline_proto_rawDescGZIP() []byte {
	file_gitlabexporter_protobuf_pipeline_proto_rawDescOnce.Do(func() {
		file_gitlabexporter_protobuf_pipeline_proto_rawDescData = protoimpl.X.CompressGZIP(file_gitlabexporter_protobuf_pipeline_proto_rawDescData)
	})
	return file_gitlabexporter_protobuf_pipeline_proto_rawDescData
}

var file_gitlabexporter_protobuf_pipeline_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gitlabexporter_protobuf_pipeline_proto_goTypes = []interface{}{
	(*Pipeline)(nil),              // 0: gitlabexporter.protobuf.Pipeline
	(*PipelineTimestamps)(nil),    // 1: gitlabexporter.protobuf.PipelineTimestamps
	(*ProjectReference)(nil),      // 2: gitlabexporter.protobuf.ProjectReference
	(*durationpb.Duration)(nil),   // 3: google.protobuf.Duration
	(*PipelineReference)(nil),     // 4: gitlabexporter.protobuf.PipelineReference
	(*MergeRequestReference)(nil), // 5: gitlabexporter.protobuf.MergeRequestReference
	(*UserReference)(nil),         // 6: gitlabexporter.protobuf.UserReference
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_gitlabexporter_protobuf_pipeline_proto_depIdxs = []int32{
	2,  // 0: gitlabexporter.protobuf.Pipeline.project:type_name -> gitlabexporter.protobuf.ProjectReference
	1,  // 1: gitlabexporter.protobuf.Pipeline.timestamps:type_name -> gitlabexporter.protobuf.PipelineTimestamps
	3,  // 2: gitlabexporter.protobuf.Pipeline.queued_duration:type_name -> google.protobuf.Duration
	3,  // 3: gitlabexporter.protobuf.Pipeline.duration:type_name -> google.protobuf.Duration
	4,  // 4: gitlabexporter.protobuf.Pipeline.upstream_pipeline:type_name -> gitlabexporter.protobuf.PipelineReference
	5,  // 5: gitlabexporter.protobuf.Pipeline.merge_request:type_name -> gitlabexporter.protobuf.MergeRequestReference
	6,  // 6: gitlabexporter.protobuf.Pipeline.user:type_name -> gitlabexporter.protobuf.UserReference
	7,  // 7: gitlabexporter.protobuf.PipelineTimestamps.committed_at:type_name -> google.protobuf.Timestamp
	7,  // 8: gitlabexporter.protobuf.PipelineTimestamps.created_at:type_name -> google.protobuf.Timestamp
	7,  // 9: gitlabexporter.protobuf.PipelineTimestamps.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 10: gitlabexporter.protobuf.PipelineTimestamps.started_at:type_name -> google.protobuf.Timestamp
	7,  // 11: gitlabexporter.protobuf.PipelineTimestamps.finished_at:type_name -> google.protobuf.Timestamp
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_gitlabexporter_protobuf_pipeline_proto_init() }
func file_gitlabexporter_protobuf_pipeline_proto_init() {
	if File_gitlabexporter_protobuf_pipeline_proto != nil {
		return
	}
	file_gitlabexporter_protobuf_references_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gitlabexporter_protobuf_pipeline_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlabexporter_protobuf_pipeline_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineTimestamps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gitlabexporter_protobuf_pipeline_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gitlabexporter_protobuf_pipeline_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gitlabexporter_protobuf_pipeline_proto_goTypes,
		DependencyIndexes: file_gitlabexporter_protobuf_pipeline_proto_depIdxs,
		MessageInfos:      file_gitlabexporter_protobuf_pipeline_proto_msgTypes,
	}.Build()
	File_gitlabexporter_protobuf_pipeline_proto = out.File
	file_gitlabexporter_protobuf_pipeline_proto_rawDesc = nil
	file_gitlabexporter_protobuf_pipeline_proto_goTypes = nil
	file_gitlabexporter_protobuf_pipeline_proto_depIdxs = nil
}
