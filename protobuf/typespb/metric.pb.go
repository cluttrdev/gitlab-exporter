// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.30.2
// source: gitlabexporter/protobuf/metric.proto

package typespb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Metric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Iid           int64                  `protobuf:"varint,2,opt,name=iid,proto3" json:"iid,omitempty"`
	Job           *JobReference          `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
	Name          string                 `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Labels        []*Metric_Label        `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty"`
	Value         float64                `protobuf:"fixed64,12,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metric) Reset() {
	*x = Metric{}
	mi := &file_gitlabexporter_protobuf_metric_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_metric_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_metric_proto_rawDescGZIP(), []int{0}
}

func (x *Metric) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Metric) GetIid() int64 {
	if x != nil {
		return x.Iid
	}
	return 0
}

func (x *Metric) GetJob() *JobReference {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *Metric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metric) GetLabels() []*Metric_Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Metric) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Metric) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Metric_Label struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metric_Label) Reset() {
	*x = Metric_Label{}
	mi := &file_gitlabexporter_protobuf_metric_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metric_Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric_Label) ProtoMessage() {}

func (x *Metric_Label) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_metric_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric_Label.ProtoReflect.Descriptor instead.
func (*Metric_Label) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_metric_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Metric_Label) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metric_Label) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_gitlabexporter_protobuf_metric_proto protoreflect.FileDescriptor

const file_gitlabexporter_protobuf_metric_proto_rawDesc = "" +
	"\n" +
	"$gitlabexporter/protobuf/metric.proto\x12\x17gitlabexporter.protobuf\x1a\x1fgoogle/protobuf/timestamp.proto\x1a(gitlabexporter/protobuf/references.proto\"\xb9\x02\n" +
	"\x06Metric\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12\x10\n" +
	"\x03iid\x18\x02 \x01(\x03R\x03iid\x127\n" +
	"\x03job\x18\x03 \x01(\v2%.gitlabexporter.protobuf.JobReferenceR\x03job\x12\x12\n" +
	"\x04name\x18\n" +
	" \x01(\tR\x04name\x12=\n" +
	"\x06labels\x18\v \x03(\v2%.gitlabexporter.protobuf.Metric.LabelR\x06labels\x12\x14\n" +
	"\x05value\x18\f \x01(\x01R\x05value\x128\n" +
	"\ttimestamp\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a1\n" +
	"\x05Label\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05valueB0Z.go.cluttr.dev/gitlab-exporter/protobuf/typespbb\x06proto3"

var (
	file_gitlabexporter_protobuf_metric_proto_rawDescOnce sync.Once
	file_gitlabexporter_protobuf_metric_proto_rawDescData []byte
)

func file_gitlabexporter_protobuf_metric_proto_rawDescGZIP() []byte {
	file_gitlabexporter_protobuf_metric_proto_rawDescOnce.Do(func() {
		file_gitlabexporter_protobuf_metric_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gitlabexporter_protobuf_metric_proto_rawDesc), len(file_gitlabexporter_protobuf_metric_proto_rawDesc)))
	})
	return file_gitlabexporter_protobuf_metric_proto_rawDescData
}

var file_gitlabexporter_protobuf_metric_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gitlabexporter_protobuf_metric_proto_goTypes = []any{
	(*Metric)(nil),                // 0: gitlabexporter.protobuf.Metric
	(*Metric_Label)(nil),          // 1: gitlabexporter.protobuf.Metric.Label
	(*JobReference)(nil),          // 2: gitlabexporter.protobuf.JobReference
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_gitlabexporter_protobuf_metric_proto_depIdxs = []int32{
	2, // 0: gitlabexporter.protobuf.Metric.job:type_name -> gitlabexporter.protobuf.JobReference
	1, // 1: gitlabexporter.protobuf.Metric.labels:type_name -> gitlabexporter.protobuf.Metric.Label
	3, // 2: gitlabexporter.protobuf.Metric.timestamp:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gitlabexporter_protobuf_metric_proto_init() }
func file_gitlabexporter_protobuf_metric_proto_init() {
	if File_gitlabexporter_protobuf_metric_proto != nil {
		return
	}
	file_gitlabexporter_protobuf_references_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gitlabexporter_protobuf_metric_proto_rawDesc), len(file_gitlabexporter_protobuf_metric_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gitlabexporter_protobuf_metric_proto_goTypes,
		DependencyIndexes: file_gitlabexporter_protobuf_metric_proto_depIdxs,
		MessageInfos:      file_gitlabexporter_protobuf_metric_proto_msgTypes,
	}.Build()
	File_gitlabexporter_protobuf_metric_proto = out.File
	file_gitlabexporter_protobuf_metric_proto_goTypes = nil
	file_gitlabexporter_protobuf_metric_proto_depIdxs = nil
}
