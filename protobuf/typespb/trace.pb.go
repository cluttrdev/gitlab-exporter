// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.30.2
// source: gitlabexporter/protobuf/trace.proto

package typespb

import (
	v1 "go.opentelemetry.io/proto/otlp/trace/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Trace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *v1.TracesData         `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trace) Reset() {
	*x = Trace{}
	mi := &file_gitlabexporter_protobuf_trace_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trace) ProtoMessage() {}

func (x *Trace) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_trace_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trace.ProtoReflect.Descriptor instead.
func (*Trace) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_trace_proto_rawDescGZIP(), []int{0}
}

func (x *Trace) GetData() *v1.TracesData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_gitlabexporter_protobuf_trace_proto protoreflect.FileDescriptor

const file_gitlabexporter_protobuf_trace_proto_rawDesc = "" +
	"\n" +
	"#gitlabexporter/protobuf/trace.proto\x12\x17gitlabexporter.protobuf\x1a(opentelemetry/proto/trace/v1/trace.proto\"E\n" +
	"\x05Trace\x12<\n" +
	"\x04data\x18\x01 \x01(\v2(.opentelemetry.proto.trace.v1.TracesDataR\x04dataB0Z.go.cluttr.dev/gitlab-exporter/protobuf/typespbb\x06proto3"

var (
	file_gitlabexporter_protobuf_trace_proto_rawDescOnce sync.Once
	file_gitlabexporter_protobuf_trace_proto_rawDescData []byte
)

func file_gitlabexporter_protobuf_trace_proto_rawDescGZIP() []byte {
	file_gitlabexporter_protobuf_trace_proto_rawDescOnce.Do(func() {
		file_gitlabexporter_protobuf_trace_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gitlabexporter_protobuf_trace_proto_rawDesc), len(file_gitlabexporter_protobuf_trace_proto_rawDesc)))
	})
	return file_gitlabexporter_protobuf_trace_proto_rawDescData
}

var file_gitlabexporter_protobuf_trace_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gitlabexporter_protobuf_trace_proto_goTypes = []any{
	(*Trace)(nil),         // 0: gitlabexporter.protobuf.Trace
	(*v1.TracesData)(nil), // 1: opentelemetry.proto.trace.v1.TracesData
}
var file_gitlabexporter_protobuf_trace_proto_depIdxs = []int32{
	1, // 0: gitlabexporter.protobuf.Trace.data:type_name -> opentelemetry.proto.trace.v1.TracesData
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gitlabexporter_protobuf_trace_proto_init() }
func file_gitlabexporter_protobuf_trace_proto_init() {
	if File_gitlabexporter_protobuf_trace_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gitlabexporter_protobuf_trace_proto_rawDesc), len(file_gitlabexporter_protobuf_trace_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gitlabexporter_protobuf_trace_proto_goTypes,
		DependencyIndexes: file_gitlabexporter_protobuf_trace_proto_depIdxs,
		MessageInfos:      file_gitlabexporter_protobuf_trace_proto_msgTypes,
	}.Build()
	File_gitlabexporter_protobuf_trace_proto = out.File
	file_gitlabexporter_protobuf_trace_proto_goTypes = nil
	file_gitlabexporter_protobuf_trace_proto_depIdxs = nil
}
