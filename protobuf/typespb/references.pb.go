// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: gitlabexporter/protobuf/references.proto

package typespb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NamespaceReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FullPath string `protobuf:"bytes,2,opt,name=full_path,json=fullPath,proto3" json:"full_path,omitempty"`
}

func (x *NamespaceReference) Reset() {
	*x = NamespaceReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceReference) ProtoMessage() {}

func (x *NamespaceReference) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceReference.ProtoReflect.Descriptor instead.
func (*NamespaceReference) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_references_proto_rawDescGZIP(), []int{0}
}

func (x *NamespaceReference) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NamespaceReference) GetFullPath() string {
	if x != nil {
		return x.FullPath
	}
	return ""
}

type ProjectReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FullPath  string              `protobuf:"bytes,2,opt,name=full_path,json=fullPath,proto3" json:"full_path,omitempty"`
	Namespace *NamespaceReference `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ProjectReference) Reset() {
	*x = ProjectReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectReference) ProtoMessage() {}

func (x *ProjectReference) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectReference.ProtoReflect.Descriptor instead.
func (*ProjectReference) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_references_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectReference) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectReference) GetFullPath() string {
	if x != nil {
		return x.FullPath
	}
	return ""
}

func (x *ProjectReference) GetNamespace() *NamespaceReference {
	if x != nil {
		return x.Namespace
	}
	return nil
}

type PipelineReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Iid     int64             `protobuf:"varint,2,opt,name=iid,proto3" json:"iid,omitempty"`
	Project *ProjectReference `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *PipelineReference) Reset() {
	*x = PipelineReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineReference) ProtoMessage() {}

func (x *PipelineReference) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineReference.ProtoReflect.Descriptor instead.
func (*PipelineReference) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_references_proto_rawDescGZIP(), []int{2}
}

func (x *PipelineReference) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PipelineReference) GetIid() int64 {
	if x != nil {
		return x.Iid
	}
	return 0
}

func (x *PipelineReference) GetProject() *ProjectReference {
	if x != nil {
		return x.Project
	}
	return nil
}

type JobReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Pipeline *PipelineReference `protobuf:"bytes,3,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
}

func (x *JobReference) Reset() {
	*x = JobReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobReference) ProtoMessage() {}

func (x *JobReference) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobReference.ProtoReflect.Descriptor instead.
func (*JobReference) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_references_proto_rawDescGZIP(), []int{3}
}

func (x *JobReference) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *JobReference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobReference) GetPipeline() *PipelineReference {
	if x != nil {
		return x.Pipeline
	}
	return nil
}

type RunnerReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RunnerReference) Reset() {
	*x = RunnerReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerReference) ProtoMessage() {}

func (x *RunnerReference) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerReference.ProtoReflect.Descriptor instead.
func (*RunnerReference) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_references_proto_rawDescGZIP(), []int{4}
}

func (x *RunnerReference) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MergeRequestReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Iid     int64             `protobuf:"varint,2,opt,name=iid,proto3" json:"iid,omitempty"`
	Project *ProjectReference `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *MergeRequestReference) Reset() {
	*x = MergeRequestReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeRequestReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeRequestReference) ProtoMessage() {}

func (x *MergeRequestReference) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeRequestReference.ProtoReflect.Descriptor instead.
func (*MergeRequestReference) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_references_proto_rawDescGZIP(), []int{5}
}

func (x *MergeRequestReference) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MergeRequestReference) GetIid() int64 {
	if x != nil {
		return x.Iid
	}
	return 0
}

func (x *MergeRequestReference) GetProject() *ProjectReference {
	if x != nil {
		return x.Project
	}
	return nil
}

type MilestoneReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Iid     int64             `protobuf:"varint,2,opt,name=iid,proto3" json:"iid,omitempty"`
	Project *ProjectReference `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *MilestoneReference) Reset() {
	*x = MilestoneReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MilestoneReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MilestoneReference) ProtoMessage() {}

func (x *MilestoneReference) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MilestoneReference.ProtoReflect.Descriptor instead.
func (*MilestoneReference) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_references_proto_rawDescGZIP(), []int{6}
}

func (x *MilestoneReference) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MilestoneReference) GetIid() int64 {
	if x != nil {
		return x.Iid
	}
	return 0
}

func (x *MilestoneReference) GetProject() *ProjectReference {
	if x != nil {
		return x.Project
	}
	return nil
}

type UserReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserReference) Reset() {
	*x = UserReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReference) ProtoMessage() {}

func (x *UserReference) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_references_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReference.ProtoReflect.Descriptor instead.
func (*UserReference) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_references_proto_rawDescGZIP(), []int{7}
}

func (x *UserReference) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_gitlabexporter_protobuf_references_proto protoreflect.FileDescriptor

var file_gitlabexporter_protobuf_references_proto_rawDesc = []byte{
	0x0a, 0x28, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x22, 0x41, 0x0a, 0x12, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x22, 0x8a, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x49, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x69,
	0x74, 0x6c, 0x61, 0x62, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x22, 0x7a, 0x0a, 0x11, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x69,
	0x74, 0x6c, 0x61, 0x62, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x7a, 0x0a, 0x0c, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x65, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x52,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7e,
	0x0a, 0x15, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x7b,
	0x0a, 0x12, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x1f, 0x0a, 0x0d, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x42, 0x37, 0x5a, 0x35,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x75, 0x74, 0x74,
	0x72, 0x64, 0x65, 0x76, 0x2f, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2d, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gitlabexporter_protobuf_references_proto_rawDescOnce sync.Once
	file_gitlabexporter_protobuf_references_proto_rawDescData = file_gitlabexporter_protobuf_references_proto_rawDesc
)

func file_gitlabexporter_protobuf_references_proto_rawDescGZIP() []byte {
	file_gitlabexporter_protobuf_references_proto_rawDescOnce.Do(func() {
		file_gitlabexporter_protobuf_references_proto_rawDescData = protoimpl.X.CompressGZIP(file_gitlabexporter_protobuf_references_proto_rawDescData)
	})
	return file_gitlabexporter_protobuf_references_proto_rawDescData
}

var file_gitlabexporter_protobuf_references_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_gitlabexporter_protobuf_references_proto_goTypes = []interface{}{
	(*NamespaceReference)(nil),    // 0: gitlabexporter.protobuf.NamespaceReference
	(*ProjectReference)(nil),      // 1: gitlabexporter.protobuf.ProjectReference
	(*PipelineReference)(nil),     // 2: gitlabexporter.protobuf.PipelineReference
	(*JobReference)(nil),          // 3: gitlabexporter.protobuf.JobReference
	(*RunnerReference)(nil),       // 4: gitlabexporter.protobuf.RunnerReference
	(*MergeRequestReference)(nil), // 5: gitlabexporter.protobuf.MergeRequestReference
	(*MilestoneReference)(nil),    // 6: gitlabexporter.protobuf.MilestoneReference
	(*UserReference)(nil),         // 7: gitlabexporter.protobuf.UserReference
}
var file_gitlabexporter_protobuf_references_proto_depIdxs = []int32{
	0, // 0: gitlabexporter.protobuf.ProjectReference.namespace:type_name -> gitlabexporter.protobuf.NamespaceReference
	1, // 1: gitlabexporter.protobuf.PipelineReference.project:type_name -> gitlabexporter.protobuf.ProjectReference
	2, // 2: gitlabexporter.protobuf.JobReference.pipeline:type_name -> gitlabexporter.protobuf.PipelineReference
	1, // 3: gitlabexporter.protobuf.MergeRequestReference.project:type_name -> gitlabexporter.protobuf.ProjectReference
	1, // 4: gitlabexporter.protobuf.MilestoneReference.project:type_name -> gitlabexporter.protobuf.ProjectReference
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_gitlabexporter_protobuf_references_proto_init() }
func file_gitlabexporter_protobuf_references_proto_init() {
	if File_gitlabexporter_protobuf_references_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gitlabexporter_protobuf_references_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlabexporter_protobuf_references_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlabexporter_protobuf_references_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlabexporter_protobuf_references_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlabexporter_protobuf_references_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlabexporter_protobuf_references_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeRequestReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlabexporter_protobuf_references_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MilestoneReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlabexporter_protobuf_references_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gitlabexporter_protobuf_references_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gitlabexporter_protobuf_references_proto_goTypes,
		DependencyIndexes: file_gitlabexporter_protobuf_references_proto_depIdxs,
		MessageInfos:      file_gitlabexporter_protobuf_references_proto_msgTypes,
	}.Build()
	File_gitlabexporter_protobuf_references_proto = out.File
	file_gitlabexporter_protobuf_references_proto_rawDesc = nil
	file_gitlabexporter_protobuf_references_proto_goTypes = nil
	file_gitlabexporter_protobuf_references_proto_depIdxs = nil
}
