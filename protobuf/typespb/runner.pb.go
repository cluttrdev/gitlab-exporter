// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.30.2
// source: gitlabexporter/protobuf/runner.proto

package typespb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunnerType int32

const (
	RunnerType_RUNNER_TYPE_UNSPECIFIED RunnerType = 0
	RunnerType_RUNNER_TYPE_UNKNOWN     RunnerType = 1
	RunnerType_RUNNER_TYPE_INSTANCE    RunnerType = 2
	RunnerType_RUNNER_TYPE_GROUP       RunnerType = 3
	RunnerType_RUNNER_TYPE_PROJECT     RunnerType = 4
)

// Enum value maps for RunnerType.
var (
	RunnerType_name = map[int32]string{
		0: "RUNNER_TYPE_UNSPECIFIED",
		1: "RUNNER_TYPE_UNKNOWN",
		2: "RUNNER_TYPE_INSTANCE",
		3: "RUNNER_TYPE_GROUP",
		4: "RUNNER_TYPE_PROJECT",
	}
	RunnerType_value = map[string]int32{
		"RUNNER_TYPE_UNSPECIFIED": 0,
		"RUNNER_TYPE_UNKNOWN":     1,
		"RUNNER_TYPE_INSTANCE":    2,
		"RUNNER_TYPE_GROUP":       3,
		"RUNNER_TYPE_PROJECT":     4,
	}
)

func (x RunnerType) Enum() *RunnerType {
	p := new(RunnerType)
	*p = x
	return p
}

func (x RunnerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunnerType) Descriptor() protoreflect.EnumDescriptor {
	return file_gitlabexporter_protobuf_runner_proto_enumTypes[0].Descriptor()
}

func (RunnerType) Type() protoreflect.EnumType {
	return &file_gitlabexporter_protobuf_runner_proto_enumTypes[0]
}

func (x RunnerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunnerType.Descriptor instead.
func (RunnerType) EnumDescriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_runner_proto_rawDescGZIP(), []int{0}
}

type RunnerStatus int32

const (
	RunnerStatus_RUNNER_STATUS_UNSPECIFIED     RunnerStatus = 0
	RunnerStatus_RUNNER_STATUS_UNKNOWN         RunnerStatus = 1
	RunnerStatus_RUNNER_STATUS_ONLINE          RunnerStatus = 2
	RunnerStatus_RUNNER_STATUS_OFFLINE         RunnerStatus = 3
	RunnerStatus_RUNNER_STATUS_STALE           RunnerStatus = 4
	RunnerStatus_RUNNER_STATUS_NEVER_CONTACTED RunnerStatus = 5
)

// Enum value maps for RunnerStatus.
var (
	RunnerStatus_name = map[int32]string{
		0: "RUNNER_STATUS_UNSPECIFIED",
		1: "RUNNER_STATUS_UNKNOWN",
		2: "RUNNER_STATUS_ONLINE",
		3: "RUNNER_STATUS_OFFLINE",
		4: "RUNNER_STATUS_STALE",
		5: "RUNNER_STATUS_NEVER_CONTACTED",
	}
	RunnerStatus_value = map[string]int32{
		"RUNNER_STATUS_UNSPECIFIED":     0,
		"RUNNER_STATUS_UNKNOWN":         1,
		"RUNNER_STATUS_ONLINE":          2,
		"RUNNER_STATUS_OFFLINE":         3,
		"RUNNER_STATUS_STALE":           4,
		"RUNNER_STATUS_NEVER_CONTACTED": 5,
	}
)

func (x RunnerStatus) Enum() *RunnerStatus {
	p := new(RunnerStatus)
	*p = x
	return p
}

func (x RunnerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunnerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gitlabexporter_protobuf_runner_proto_enumTypes[1].Descriptor()
}

func (RunnerStatus) Type() protoreflect.EnumType {
	return &file_gitlabexporter_protobuf_runner_proto_enumTypes[1]
}

func (x RunnerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunnerStatus.Descriptor instead.
func (RunnerStatus) EnumDescriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_runner_proto_rawDescGZIP(), []int{1}
}

type Runner struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ShortSha      string                 `protobuf:"bytes,2,opt,name=short_sha,json=shortSha,proto3" json:"short_sha,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	RunnerType    RunnerType             `protobuf:"varint,4,opt,name=runner_type,json=runnerType,proto3,enum=gitlabexporter.protobuf.RunnerType" json:"runner_type,omitempty"`
	TagList       []string               `protobuf:"bytes,5,rep,name=tag_list,json=tagList,proto3" json:"tag_list,omitempty"`
	Status        RunnerStatus           `protobuf:"varint,6,opt,name=status,proto3,enum=gitlabexporter.protobuf.RunnerStatus" json:"status,omitempty"`
	Flags         *RunnerFlags           `protobuf:"bytes,7,opt,name=flags,proto3" json:"flags,omitempty"`
	Timestamps    *RunnerTimestamps      `protobuf:"bytes,8,opt,name=timestamps,proto3" json:"timestamps,omitempty"`
	CreatedBy     *UserReference         `protobuf:"bytes,9,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Runner) Reset() {
	*x = Runner{}
	mi := &file_gitlabexporter_protobuf_runner_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Runner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runner) ProtoMessage() {}

func (x *Runner) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_runner_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runner.ProtoReflect.Descriptor instead.
func (*Runner) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_runner_proto_rawDescGZIP(), []int{0}
}

func (x *Runner) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Runner) GetShortSha() string {
	if x != nil {
		return x.ShortSha
	}
	return ""
}

func (x *Runner) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Runner) GetRunnerType() RunnerType {
	if x != nil {
		return x.RunnerType
	}
	return RunnerType_RUNNER_TYPE_UNSPECIFIED
}

func (x *Runner) GetTagList() []string {
	if x != nil {
		return x.TagList
	}
	return nil
}

func (x *Runner) GetStatus() RunnerStatus {
	if x != nil {
		return x.Status
	}
	return RunnerStatus_RUNNER_STATUS_UNSPECIFIED
}

func (x *Runner) GetFlags() *RunnerFlags {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *Runner) GetTimestamps() *RunnerTimestamps {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

func (x *Runner) GetCreatedBy() *UserReference {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

type RunnerFlags struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Locked        bool                   `protobuf:"varint,1,opt,name=locked,proto3" json:"locked,omitempty"`
	Paused        bool                   `protobuf:"varint,2,opt,name=paused,proto3" json:"paused,omitempty"`
	RunProtected  bool                   `protobuf:"varint,9,opt,name=run_protected,json=runProtected,proto3" json:"run_protected,omitempty"`
	RunUntagged   bool                   `protobuf:"varint,10,opt,name=run_untagged,json=runUntagged,proto3" json:"run_untagged,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerFlags) Reset() {
	*x = RunnerFlags{}
	mi := &file_gitlabexporter_protobuf_runner_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerFlags) ProtoMessage() {}

func (x *RunnerFlags) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_runner_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerFlags.ProtoReflect.Descriptor instead.
func (*RunnerFlags) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_runner_proto_rawDescGZIP(), []int{1}
}

func (x *RunnerFlags) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *RunnerFlags) GetPaused() bool {
	if x != nil {
		return x.Paused
	}
	return false
}

func (x *RunnerFlags) GetRunProtected() bool {
	if x != nil {
		return x.RunProtected
	}
	return false
}

func (x *RunnerFlags) GetRunUntagged() bool {
	if x != nil {
		return x.RunUntagged
	}
	return false
}

type RunnerTimestamps struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ContactedAt   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=contacted_at,json=contactedAt,proto3" json:"contacted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerTimestamps) Reset() {
	*x = RunnerTimestamps{}
	mi := &file_gitlabexporter_protobuf_runner_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerTimestamps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerTimestamps) ProtoMessage() {}

func (x *RunnerTimestamps) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_runner_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerTimestamps.ProtoReflect.Descriptor instead.
func (*RunnerTimestamps) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_runner_proto_rawDescGZIP(), []int{2}
}

func (x *RunnerTimestamps) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RunnerTimestamps) GetContactedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ContactedAt
	}
	return nil
}

var File_gitlabexporter_protobuf_runner_proto protoreflect.FileDescriptor

const file_gitlabexporter_protobuf_runner_proto_rawDesc = "" +
	"\n" +
	"$gitlabexporter/protobuf/runner.proto\x12\x17gitlabexporter.protobuf\x1a\x1fgoogle/protobuf/timestamp.proto\x1a(gitlabexporter/protobuf/references.proto\"\xc5\x03\n" +
	"\x06Runner\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1b\n" +
	"\tshort_sha\x18\x02 \x01(\tR\bshortSha\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12D\n" +
	"\vrunner_type\x18\x04 \x01(\x0e2#.gitlabexporter.protobuf.RunnerTypeR\n" +
	"runnerType\x12\x19\n" +
	"\btag_list\x18\x05 \x03(\tR\atagList\x12=\n" +
	"\x06status\x18\x06 \x01(\x0e2%.gitlabexporter.protobuf.RunnerStatusR\x06status\x12:\n" +
	"\x05flags\x18\a \x01(\v2$.gitlabexporter.protobuf.RunnerFlagsR\x05flags\x12I\n" +
	"\n" +
	"timestamps\x18\b \x01(\v2).gitlabexporter.protobuf.RunnerTimestampsR\n" +
	"timestamps\x12E\n" +
	"\n" +
	"created_by\x18\t \x01(\v2&.gitlabexporter.protobuf.UserReferenceR\tcreatedBy\"\x85\x01\n" +
	"\vRunnerFlags\x12\x16\n" +
	"\x06locked\x18\x01 \x01(\bR\x06locked\x12\x16\n" +
	"\x06paused\x18\x02 \x01(\bR\x06paused\x12#\n" +
	"\rrun_protected\x18\t \x01(\bR\frunProtected\x12!\n" +
	"\frun_untagged\x18\n" +
	" \x01(\bR\vrunUntagged\"\x8c\x01\n" +
	"\x10RunnerTimestamps\x129\n" +
	"\n" +
	"created_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12=\n" +
	"\fcontacted_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vcontactedAt*\x8c\x01\n" +
	"\n" +
	"RunnerType\x12\x1b\n" +
	"\x17RUNNER_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13RUNNER_TYPE_UNKNOWN\x10\x01\x12\x18\n" +
	"\x14RUNNER_TYPE_INSTANCE\x10\x02\x12\x15\n" +
	"\x11RUNNER_TYPE_GROUP\x10\x03\x12\x17\n" +
	"\x13RUNNER_TYPE_PROJECT\x10\x04*\xb9\x01\n" +
	"\fRunnerStatus\x12\x1d\n" +
	"\x19RUNNER_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15RUNNER_STATUS_UNKNOWN\x10\x01\x12\x18\n" +
	"\x14RUNNER_STATUS_ONLINE\x10\x02\x12\x19\n" +
	"\x15RUNNER_STATUS_OFFLINE\x10\x03\x12\x17\n" +
	"\x13RUNNER_STATUS_STALE\x10\x04\x12!\n" +
	"\x1dRUNNER_STATUS_NEVER_CONTACTED\x10\x05B0Z.go.cluttr.dev/gitlab-exporter/protobuf/typespbb\x06proto3"

var (
	file_gitlabexporter_protobuf_runner_proto_rawDescOnce sync.Once
	file_gitlabexporter_protobuf_runner_proto_rawDescData []byte
)

func file_gitlabexporter_protobuf_runner_proto_rawDescGZIP() []byte {
	file_gitlabexporter_protobuf_runner_proto_rawDescOnce.Do(func() {
		file_gitlabexporter_protobuf_runner_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gitlabexporter_protobuf_runner_proto_rawDesc), len(file_gitlabexporter_protobuf_runner_proto_rawDesc)))
	})
	return file_gitlabexporter_protobuf_runner_proto_rawDescData
}

var file_gitlabexporter_protobuf_runner_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_gitlabexporter_protobuf_runner_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_gitlabexporter_protobuf_runner_proto_goTypes = []any{
	(RunnerType)(0),               // 0: gitlabexporter.protobuf.RunnerType
	(RunnerStatus)(0),             // 1: gitlabexporter.protobuf.RunnerStatus
	(*Runner)(nil),                // 2: gitlabexporter.protobuf.Runner
	(*RunnerFlags)(nil),           // 3: gitlabexporter.protobuf.RunnerFlags
	(*RunnerTimestamps)(nil),      // 4: gitlabexporter.protobuf.RunnerTimestamps
	(*UserReference)(nil),         // 5: gitlabexporter.protobuf.UserReference
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_gitlabexporter_protobuf_runner_proto_depIdxs = []int32{
	0, // 0: gitlabexporter.protobuf.Runner.runner_type:type_name -> gitlabexporter.protobuf.RunnerType
	1, // 1: gitlabexporter.protobuf.Runner.status:type_name -> gitlabexporter.protobuf.RunnerStatus
	3, // 2: gitlabexporter.protobuf.Runner.flags:type_name -> gitlabexporter.protobuf.RunnerFlags
	4, // 3: gitlabexporter.protobuf.Runner.timestamps:type_name -> gitlabexporter.protobuf.RunnerTimestamps
	5, // 4: gitlabexporter.protobuf.Runner.created_by:type_name -> gitlabexporter.protobuf.UserReference
	6, // 5: gitlabexporter.protobuf.RunnerTimestamps.created_at:type_name -> google.protobuf.Timestamp
	6, // 6: gitlabexporter.protobuf.RunnerTimestamps.contacted_at:type_name -> google.protobuf.Timestamp
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_gitlabexporter_protobuf_runner_proto_init() }
func file_gitlabexporter_protobuf_runner_proto_init() {
	if File_gitlabexporter_protobuf_runner_proto != nil {
		return
	}
	file_gitlabexporter_protobuf_references_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gitlabexporter_protobuf_runner_proto_rawDesc), len(file_gitlabexporter_protobuf_runner_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gitlabexporter_protobuf_runner_proto_goTypes,
		DependencyIndexes: file_gitlabexporter_protobuf_runner_proto_depIdxs,
		EnumInfos:         file_gitlabexporter_protobuf_runner_proto_enumTypes,
		MessageInfos:      file_gitlabexporter_protobuf_runner_proto_msgTypes,
	}.Build()
	File_gitlabexporter_protobuf_runner_proto = out.File
	file_gitlabexporter_protobuf_runner_proto_goTypes = nil
	file_gitlabexporter_protobuf_runner_proto_depIdxs = nil
}
