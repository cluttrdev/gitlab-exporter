// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.30.2
// source: gitlabexporter/protobuf/deployment.proto

package typespb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeploymentStatus int32

const (
	DeploymentStatus_DEPLOYMENT_STATUS_UNSPECIFIED DeploymentStatus = 0
	DeploymentStatus_DEPLOYMENT_STATUS_CREATED     DeploymentStatus = 1
	DeploymentStatus_DEPLOYMENT_STATUS_RUNNING     DeploymentStatus = 2
	DeploymentStatus_DEPLOYMENT_STATUS_SUCCESS     DeploymentStatus = 3
	DeploymentStatus_DEPLOYMENT_STATUS_FAILED      DeploymentStatus = 4
	DeploymentStatus_DEPLOYMENT_STATUS_CANCELED    DeploymentStatus = 5
	DeploymentStatus_DEPLOYMENT_STATUS_SKIPPED     DeploymentStatus = 6
	DeploymentStatus_DEPLOYMENT_STATUS_BLOCKED     DeploymentStatus = 7
)

// Enum value maps for DeploymentStatus.
var (
	DeploymentStatus_name = map[int32]string{
		0: "DEPLOYMENT_STATUS_UNSPECIFIED",
		1: "DEPLOYMENT_STATUS_CREATED",
		2: "DEPLOYMENT_STATUS_RUNNING",
		3: "DEPLOYMENT_STATUS_SUCCESS",
		4: "DEPLOYMENT_STATUS_FAILED",
		5: "DEPLOYMENT_STATUS_CANCELED",
		6: "DEPLOYMENT_STATUS_SKIPPED",
		7: "DEPLOYMENT_STATUS_BLOCKED",
	}
	DeploymentStatus_value = map[string]int32{
		"DEPLOYMENT_STATUS_UNSPECIFIED": 0,
		"DEPLOYMENT_STATUS_CREATED":     1,
		"DEPLOYMENT_STATUS_RUNNING":     2,
		"DEPLOYMENT_STATUS_SUCCESS":     3,
		"DEPLOYMENT_STATUS_FAILED":      4,
		"DEPLOYMENT_STATUS_CANCELED":    5,
		"DEPLOYMENT_STATUS_SKIPPED":     6,
		"DEPLOYMENT_STATUS_BLOCKED":     7,
	}
)

func (x DeploymentStatus) Enum() *DeploymentStatus {
	p := new(DeploymentStatus)
	*p = x
	return p
}

func (x DeploymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gitlabexporter_protobuf_deployment_proto_enumTypes[0].Descriptor()
}

func (DeploymentStatus) Type() protoreflect.EnumType {
	return &file_gitlabexporter_protobuf_deployment_proto_enumTypes[0]
}

func (x DeploymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentStatus.Descriptor instead.
func (DeploymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_deployment_proto_rawDescGZIP(), []int{0}
}

type Deployment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Iid           int64                  `protobuf:"varint,2,opt,name=iid,proto3" json:"iid,omitempty"`
	Job           *JobReference          `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
	Triggerer     *UserReference         `protobuf:"bytes,4,opt,name=triggerer,proto3" json:"triggerer,omitempty"`
	Environment   *EnvironmentReference  `protobuf:"bytes,5,opt,name=environment,proto3" json:"environment,omitempty"`
	Timestamps    *DeploymentTimestamps  `protobuf:"bytes,6,opt,name=timestamps,proto3" json:"timestamps,omitempty"`
	Status        DeploymentStatus       `protobuf:"varint,7,opt,name=status,proto3,enum=gitlabexporter.protobuf.DeploymentStatus" json:"status,omitempty"`
	Ref           string                 `protobuf:"bytes,8,opt,name=ref,proto3" json:"ref,omitempty"`
	Sha           string                 `protobuf:"bytes,9,opt,name=sha,proto3" json:"sha,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Deployment) Reset() {
	*x = Deployment{}
	mi := &file_gitlabexporter_protobuf_deployment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deployment) ProtoMessage() {}

func (x *Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_deployment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deployment.ProtoReflect.Descriptor instead.
func (*Deployment) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_deployment_proto_rawDescGZIP(), []int{0}
}

func (x *Deployment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Deployment) GetIid() int64 {
	if x != nil {
		return x.Iid
	}
	return 0
}

func (x *Deployment) GetJob() *JobReference {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *Deployment) GetTriggerer() *UserReference {
	if x != nil {
		return x.Triggerer
	}
	return nil
}

func (x *Deployment) GetEnvironment() *EnvironmentReference {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *Deployment) GetTimestamps() *DeploymentTimestamps {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

func (x *Deployment) GetStatus() DeploymentStatus {
	if x != nil {
		return x.Status
	}
	return DeploymentStatus_DEPLOYMENT_STATUS_UNSPECIFIED
}

func (x *Deployment) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *Deployment) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

type DeploymentTimestamps struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	FinishedAt    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeploymentTimestamps) Reset() {
	*x = DeploymentTimestamps{}
	mi := &file_gitlabexporter_protobuf_deployment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentTimestamps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentTimestamps) ProtoMessage() {}

func (x *DeploymentTimestamps) ProtoReflect() protoreflect.Message {
	mi := &file_gitlabexporter_protobuf_deployment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentTimestamps.ProtoReflect.Descriptor instead.
func (*DeploymentTimestamps) Descriptor() ([]byte, []int) {
	return file_gitlabexporter_protobuf_deployment_proto_rawDescGZIP(), []int{1}
}

func (x *DeploymentTimestamps) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DeploymentTimestamps) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

func (x *DeploymentTimestamps) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_gitlabexporter_protobuf_deployment_proto protoreflect.FileDescriptor

const file_gitlabexporter_protobuf_deployment_proto_rawDesc = "" +
	"\n" +
	"(gitlabexporter/protobuf/deployment.proto\x12\x17gitlabexporter.protobuf\x1a\x1fgoogle/protobuf/timestamp.proto\x1a(gitlabexporter/protobuf/references.proto\"\xb4\x03\n" +
	"\n" +
	"Deployment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x10\n" +
	"\x03iid\x18\x02 \x01(\x03R\x03iid\x127\n" +
	"\x03job\x18\x03 \x01(\v2%.gitlabexporter.protobuf.JobReferenceR\x03job\x12D\n" +
	"\ttriggerer\x18\x04 \x01(\v2&.gitlabexporter.protobuf.UserReferenceR\ttriggerer\x12O\n" +
	"\venvironment\x18\x05 \x01(\v2-.gitlabexporter.protobuf.EnvironmentReferenceR\venvironment\x12M\n" +
	"\n" +
	"timestamps\x18\x06 \x01(\v2-.gitlabexporter.protobuf.DeploymentTimestampsR\n" +
	"timestamps\x12A\n" +
	"\x06status\x18\a \x01(\x0e2).gitlabexporter.protobuf.DeploymentStatusR\x06status\x12\x10\n" +
	"\x03ref\x18\b \x01(\tR\x03ref\x12\x10\n" +
	"\x03sha\x18\t \x01(\tR\x03sha\"\xc9\x01\n" +
	"\x14DeploymentTimestamps\x129\n" +
	"\n" +
	"created_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12;\n" +
	"\vfinished_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"finishedAt\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt*\x8e\x02\n" +
	"\x10DeploymentStatus\x12!\n" +
	"\x1dDEPLOYMENT_STATUS_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19DEPLOYMENT_STATUS_CREATED\x10\x01\x12\x1d\n" +
	"\x19DEPLOYMENT_STATUS_RUNNING\x10\x02\x12\x1d\n" +
	"\x19DEPLOYMENT_STATUS_SUCCESS\x10\x03\x12\x1c\n" +
	"\x18DEPLOYMENT_STATUS_FAILED\x10\x04\x12\x1e\n" +
	"\x1aDEPLOYMENT_STATUS_CANCELED\x10\x05\x12\x1d\n" +
	"\x19DEPLOYMENT_STATUS_SKIPPED\x10\x06\x12\x1d\n" +
	"\x19DEPLOYMENT_STATUS_BLOCKED\x10\aB0Z.go.cluttr.dev/gitlab-exporter/protobuf/typespbb\x06proto3"

var (
	file_gitlabexporter_protobuf_deployment_proto_rawDescOnce sync.Once
	file_gitlabexporter_protobuf_deployment_proto_rawDescData []byte
)

func file_gitlabexporter_protobuf_deployment_proto_rawDescGZIP() []byte {
	file_gitlabexporter_protobuf_deployment_proto_rawDescOnce.Do(func() {
		file_gitlabexporter_protobuf_deployment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gitlabexporter_protobuf_deployment_proto_rawDesc), len(file_gitlabexporter_protobuf_deployment_proto_rawDesc)))
	})
	return file_gitlabexporter_protobuf_deployment_proto_rawDescData
}

var file_gitlabexporter_protobuf_deployment_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gitlabexporter_protobuf_deployment_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gitlabexporter_protobuf_deployment_proto_goTypes = []any{
	(DeploymentStatus)(0),         // 0: gitlabexporter.protobuf.DeploymentStatus
	(*Deployment)(nil),            // 1: gitlabexporter.protobuf.Deployment
	(*DeploymentTimestamps)(nil),  // 2: gitlabexporter.protobuf.DeploymentTimestamps
	(*JobReference)(nil),          // 3: gitlabexporter.protobuf.JobReference
	(*UserReference)(nil),         // 4: gitlabexporter.protobuf.UserReference
	(*EnvironmentReference)(nil),  // 5: gitlabexporter.protobuf.EnvironmentReference
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_gitlabexporter_protobuf_deployment_proto_depIdxs = []int32{
	3, // 0: gitlabexporter.protobuf.Deployment.job:type_name -> gitlabexporter.protobuf.JobReference
	4, // 1: gitlabexporter.protobuf.Deployment.triggerer:type_name -> gitlabexporter.protobuf.UserReference
	5, // 2: gitlabexporter.protobuf.Deployment.environment:type_name -> gitlabexporter.protobuf.EnvironmentReference
	2, // 3: gitlabexporter.protobuf.Deployment.timestamps:type_name -> gitlabexporter.protobuf.DeploymentTimestamps
	0, // 4: gitlabexporter.protobuf.Deployment.status:type_name -> gitlabexporter.protobuf.DeploymentStatus
	6, // 5: gitlabexporter.protobuf.DeploymentTimestamps.created_at:type_name -> google.protobuf.Timestamp
	6, // 6: gitlabexporter.protobuf.DeploymentTimestamps.finished_at:type_name -> google.protobuf.Timestamp
	6, // 7: gitlabexporter.protobuf.DeploymentTimestamps.updated_at:type_name -> google.protobuf.Timestamp
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_gitlabexporter_protobuf_deployment_proto_init() }
func file_gitlabexporter_protobuf_deployment_proto_init() {
	if File_gitlabexporter_protobuf_deployment_proto != nil {
		return
	}
	file_gitlabexporter_protobuf_references_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gitlabexporter_protobuf_deployment_proto_rawDesc), len(file_gitlabexporter_protobuf_deployment_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gitlabexporter_protobuf_deployment_proto_goTypes,
		DependencyIndexes: file_gitlabexporter_protobuf_deployment_proto_depIdxs,
		EnumInfos:         file_gitlabexporter_protobuf_deployment_proto_enumTypes,
		MessageInfos:      file_gitlabexporter_protobuf_deployment_proto_msgTypes,
	}.Build()
	File_gitlabexporter_protobuf_deployment_proto = out.File
	file_gitlabexporter_protobuf_deployment_proto_goTypes = nil
	file_gitlabexporter_protobuf_deployment_proto_depIdxs = nil
}
